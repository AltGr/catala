(* This file was auto-generated based on "parser.messages". *)

(* Please note that the function [message] can raise [Not_found]. *)

let message s =
  match s with
  | 0 -> "expected a law heading, a law article, some text of the declaration of a master file\n"
  | 1 ->
      "expected an inclusion of a Catala file, since this file is a master file which can only \
       contain inclusions of other Catala files\n"
  | 3 -> "expected some text or includes only\n"
  | 7 ->
      "expected another inclusion of a Catala file, since this file is a master file which can \
       only contain inclusions of other Catala files\n"
  | 8 -> "expected some text, another heading or a law article\n"
  | 366 -> "expected a heading, an article title or some text\n"
  | 351 -> "expected an article title, another heading or some text\n"
  | 356 -> "expected a code block, a metadata block, more law text or a heading\n"
  | 362 -> "expected a code block, a metadata block, more law text or a heading\n"
  | 357 -> "expected a declaration or a scope use\n"
  | 22 -> "expected the name of the scope you want to use\n"
  | 24 -> "expected a scope use precondition or a colon\n"
  | 25 -> "expected an expression which will act as the condition\n"
  | 26 -> "expected the first component of the date literal\n"
  | 28 -> "expected a \"/\"\n"
  | 29 -> "expected the second component of the date literal\n"
  | 30 -> "expected a \"/\"\n"
  | 31 -> "expected the third component of the date literal\n"
  | 32 -> "expected a delimiter to finish the date literal\n"
  | 70 -> "expected an operator to compose the expression on the left with\n"
  | 108 -> "expected an enum constructor to test if the expression on the left\n"
  | 107 -> "expected an operator to compose the expression on the left with\n"
  | 134 -> "expected an expression on the right side of the sum or minus operator\n"
  | 176 -> "expected an expression on the right side of the logical operator\n"
  | 110 -> "expected an expression for the argument of this function call\n"
  | 168 -> "expected an expression on the right side of the comparison operator\n"
  | 143 -> "expected an expression on the right side of the multiplication or division operator\n"
  | 136 -> "expected an operator to compose the expression on the left\n"
  | 121 -> "expected an expression standing for the set you want to test for membership\n"
  | 71 -> "expected an identifier standing for a struct field or a subscope name\n"
  | 234 -> "expected a colon after the scope use precondition\n"
  | 73 -> "expected a constructor, to get the payload of this enum case\n"
  | 35 -> "expected the \"for\" keyword to spell the aggregation\n"
  | 170 -> "expected an expression to take the negation of\n"
  | 105 -> "expected an expression to take the opposite of\n"
  | 59 -> "expected an expression to match with\n"
  | 76 -> "expected a pattern matching case\n"
  | 77 -> "expected the name of the constructor for the enum case in the pattern matching\n"
  | 190 ->
      "expected a binding for the constructor payload, or a colon and the matching case expression\n"
  | 191 -> "expected an identifier for this enum case binding\n"
  | 80 -> "expected a colon and then the expression for this matching case\n"
  | 193 -> "expected a colon or a binding for the enum constructor payload\n"
  | 81 -> "expected an expression for this pattern matching case\n"
  | 78 ->
      "expected another match case or the rest of the expression since the previous match case is \
       complete\n"
  | 75 -> "expected the \"with patter\" keyword to complete the pattern matching expression\n"
  | 58 -> "expected an expression inside the parenthesis\n"
  | 222 -> "unmatched parenthesis that should have been closed by here\n"
  | 87 -> "expected a unit for this literal, or a valid operator to complete the expression \n"
  | 197 -> "expected an expression for the test of the conditional\n"
  | 218 -> "expected an expression the for the \"then\" branch of the conditiona\n"
  | 219 ->
      "expected the \"else\" branch of this conditional expression as the \"then\" branch is \
       complete\n"
  | 220 -> "expected an expression for the \"else\" branch of this conditional construction\n"
  | 217 -> "expected the \"then\" keyword as the conditional expression is complete\n"
  | 198 ->
      "expected the \"all\" keyword to mean the \"for all\" construction of the universal test\n"
  | 203 -> "expected an identifier for the bound variable of the universal test\n"
  | 204 -> "expected the \"in\" keyword for the rest of the universal test\n"
  | 205 -> "expected the expression designating the set on which to perform the universal test\n"
  | 206 -> "expected the \"we have\" keyword for this universal test\n"
  | 202 -> "expected an expression for the universal test\n"
  | 211 -> "expected an identifier that will designate the existential witness for the test\n"
  | 212 -> "expected the \"in\" keyword to continue this existential test\n"
  | 213 -> "expected an expression that designates the set subject to the existential test\n"
  | 214 -> "expected a keyword to form the \"such that\" expression for the existential test\n"
  | 215 -> "expected a keyword to complete the \"such that\" construction\n"
  | 209 -> "expected an expression for the existential test\n"
  | 96 ->
      "expected a payload for the enum case constructor, or the rest of the expression (with an \
       operator ?)\n"
  | 97 -> "expected structure fields introduced by --\n"
  | 98 -> "expected the name of the structure field\n"
  | 102 -> "expected a colon\n"
  | 103 -> "expected the expression for this struct field\n"
  | 99 -> "expected another structure field or the closing bracket\n"
  | 100 -> "expected the name of the structure field\n"
  | 180 -> "expected an expression for the content of this enum case\n"
  | 181 ->
      "the expression for the content of the enum case is already well-formed, expected an \
       operator to form a bigger expression\n"
  | 104 -> "expected the keyword following cardinal to compute the number of elements in a set\n"
  | 235 -> "expected a scope use item: a rule, definition or assertion\n"
  | 270 -> "expected the name of the variable subject to the rule\n"
  | 248 ->
      "expected a condition or a consequence for this rule, or the rest of the variable qualified \
       name\n"
  | 277 -> "expected a condition or a consequence for this rule\n"
  | 272 -> "expected filled or not filled for a rule consequence\n"
  | 278 -> "expected the name of the parameter for this dependent variable \n"
  | 271 -> "expected the expression of the rule\n"
  | 275 -> "expected the filled keyword the this rule \n"
  | 249 -> "expected a struct field or a sub-scope context item after the dot\n"
  | 236 -> "expected the name of the label\n"
  | 266 -> "expected a rule or a definition after the label declaration\n"
  | 267 -> "expected the label to which the exception is referring back\n"
  | 269 -> "expected a rule or a definition after the exception declaration\n"
  | 282 -> "expected the name of the variable you want to define\n"
  | 283 -> "expected the defined as keyword to introduce the definition of this variable\n"
  | 285 -> "expected an expression for the consequence of this definition under condition\n"
  | 284 ->
      "expected a expression for defining this function, introduced by the defined as keyword\n"
  | 286 -> "expected an expression for the definition\n"
  | 238 -> "expected an expression that shoud be asserted during execution\n"
  | 239 -> "expecting the name of the varying variable\n"
  | 242 -> "the variable varies with an expression that was expected here\n"
  | 243 -> "expected an indication about the variation sense of the variable, or a new scope item\n"
  | 241 -> "expected an indication about what this variable varies with\n"
  | 251 -> "expected an expression for this condition\n"
  | 261 -> "expected a consequence for this definition under condition\n"
  | 257 -> "expected an expression for this definition under condition\n"
  | 253 -> "expected the name of the variable that should be fixed\n"
  | 254 -> "expected the legislative text by which the value of the variable is fixed\n"
  | 255 -> "expected the legislative text by which the value of the variable is fixed\n"
  | 264 -> "expected a new scope use item \n"
  | 293 -> "expected the kind of the declaration (struct, scope or enum)\n"
  | 294 -> "expected the struct name\n"
  | 295 -> "expected a colon\n"
  | 296 -> "expected struct data or condition\n"
  | 297 -> "expected the name of this struct data \n"
  | 298 -> "expected the type of this struct data, introduced by the content keyword\n"
  | 299 -> "expected the type of this struct data\n"
  | 313 -> "expected the name of this struct condition\n"
  | 306 -> "expected a new struct data, or another declaration or scope use\n"
  | 307 -> "expected the type of the parameter of this struct data function\n"
  | 311 -> "expected a new struct data, or another declaration or scope use\n"
  | 303 -> "expected a new struct data, or another declaration or scope use\n"
  | 316 -> "expected the name of the scope you are declaring\n"
  | 317 -> "expected a colon followed by the list of context items of this scope\n"
  | 318 -> "expected a context item introduced by \"context\"\n"
  | 319 -> "expected the name of this new context item\n"
  | 320 -> "expected the kind of this context item: is it a condition, a sub-scope or a data?\n"
  | 321 -> "expected the name of the subscope for this context item\n"
  | 328 -> "expected another scope context item or the end of the scope declaration\n"
  | 323 -> "expected the type of this context item\n"
  | 324 -> "expected the next context item or a dependency declaration for this item\n"
  | 326 -> "expected the next context item or a dependency declaration for this item\n"
  | 331 -> "expected the name of your enum\n"
  | 332 -> "expected a colon\n"
  | 333 -> "expected an enum case\n"
  | 334 -> "expected the name of an enum case \n"
  | 335 -> "expected a payload for your enum case, or another case or declaration \n"
  | 336 -> "expected a content type\n"
  | 341 -> "expected another enum case, or a new declaration or scope use\n"
  | 18 -> "expected a declaration or a scope use\n"
  | 19 -> "expected some text or the beginning of a code section\n"
  | 20 -> "expected a declaration or a scope use\n"
  | 21 -> "should not happen\n"
  | 347 -> "expected a metadata-closing tag\n"
  | 348 -> "expected a metadata-closing tag\n"
  | _ -> raise Not_found
